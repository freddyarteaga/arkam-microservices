
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: product-service
#          uri: lb://PRODUCT-SERVICE
#          predicates:
#            - Path=/products/**
#          filters:
#            - "RewritePath=/products(?<segment>/?.*),/api/products${segment}"
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/users/**
#          filters:
#            - "RewritePath=/users(?<segment>/?.*),/api/users${segment}"
#        - id: order-service
#          uri: lb://ORDER-SERVICE
#          predicates:
#            - Path=/orders/**, /cart/**
#          filters:
#            - "RewritePath=/(?<segment>.*),/api/${segment}"
#        - id: eureka-server
#          uri: http://localhost:8761
#          predicates:
#            - Path=/eureka/main
#          filters:
#            - SetPath=/
#        - id: eureka-server-static
#          uri: http://localhost:8761
#          predicates:
#            - Path=/eureka/**

# http://localhost:8080/api/users -> http://localhost:8082/api/users
server:
  port: 8080

#logging:
#  level:
#    root: info
#    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
#    org.springframework.cloud.gateway: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
otel:
 traces:
   exporter: zipkin
 exporter:
   zipkin:
     endpoint: http://zipkin:9411/api/v2/spans

# Spring Cloud Gateway Route Configurations
spring:
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/products/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/orders/**, /api/cart/**
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8443/realms/arkam-app/protocol/openid-connect/certs

# Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      ecomBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: eureka
    instance-id: ${spring.application.name}:${server.port}