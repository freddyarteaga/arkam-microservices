spring:
  application:
    name: notification-service
  config:
    import: optional:configserver:http://localhost:8888
  cloud:
    function:
      definition: orderCreated
    stream:
      function:
        definition: orderCreated
      bindings:
        orderCreated-in-0:
          destination: order.exchange
          group: notification-group
          content-type: application/json
      kafka:
        binder:
          brokers: localhost:9092

#  rabbitmq:
#    host: ${RABBITMQ_HOST:localhost}
#    port: ${RABBITMQ_PORT:5672}
#    username: ${RABBITMQ_USERNAME:guest}
#    password: ${RABBITMQ_PASSWORD:guest}
#    virtual-host: ${RABBITMQ_VHOST:guest}
#    connection-timeout: 30000

server:
  port: 8084

# Local development defaults
app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey}
    expiration: 86400000  # 24 hours
  aws:
    region: ${AWS_REGION:us-east-1}
    s3:
      bucket: ${S3_BUCKET:notification-templates}
    ses:
      from-email: ${SES_FROM_EMAIL:noreply@arkam.com}

management:
  endpoints:
    web:
      exposure:
        include: "*"

#rabbitmq:
#  exchange:
#    name: order.exchange
#  queue:
#    name: order.queue
#  routing:
#    key: order.tracking