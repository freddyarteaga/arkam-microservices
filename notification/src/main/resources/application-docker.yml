spring:
  application:
    name: notification
  cloud:
    function:
      definition: orderCreated
    stream:
      function:
        definition: orderCreated
      bindings:
        orderCreated-in-0:
          destination: order.exchange
          group: notification-group
          content-type: application/json
      kafka:
        binder:
          brokers: kafka:9092


#  rabbitmq:
#    host: ${RABBITMQ_HOST:localhost}
#    port: ${RABBITMQ_PORT:5672}
#    username: ${RABBITMQ_USERNAME:guest}
#    password: ${RABBITMQ_PASSWORD:guest}
#    virtual-host: ${RABBITMQ_VHOST:guest}
#    connection-timeout: 30000

server:
   port:
     8084

management:
   endpoints:
     web:
       exposure:
         include: "*"
   tracing:
     sampling:
       probability: 1.0
   zipkin:
     tracing:
       endpoint: http://zipkin:9411/api/v2/spans


#rabbitmq:
#  exchange:
#    name: order.exchange
#  queue:
#    name: order.queue
#  routing:
#    key: order.tracking